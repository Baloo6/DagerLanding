<div class="relative w-full h-64 overflow-hidden bg-black bg-opacity-50 border border-green-800 rounded-lg">
  <div class="flex transition-transform duration-250 ease-in-out h-full touch-pan-y" id="carousel">
    <div class="flex w-full flex-shrink-0">
      <img src="/carousel1.jpg" alt="Image 1" class="w-1/3 h-full object-cover object-center">
      <img src="/carousel2.jpg" alt="Image 2" class="w-1/3 h-full object-cover object-center">
      <img src="/carousel3.jpg" alt="Image 3" class="w-1/3 h-full object-cover object-center">
    </div>
    <div class="flex w-full flex-shrink-0">
      <img src="/carousel4.jpg" alt="Image 4" class="w-1/3 h-full object-cover object-center">
      <img src="/carousel5.jpg" alt="Image 5" class="w-1/3 h-full object-cover object-center">
      <img src="/carousel6.png" alt="Image 6" class="w-1/3 h-full object-cover object-center">
    </div>
  </div>
  <button class="absolute left-4 top-1/2 transform -translate-y-1/2 bg-green-600 bg-opacity-30 text-white p-2 rounded-full focus:outline-none lg:hidden" id="prevBtn">&lt;</button>
  <button class="absolute right-4 top-1/2 transform -translate-y-1/2 bg-green-600 bg-opacity-30 text-white p-2 rounded-full focus:outline-none lg:hidden" id="nextBtn">&gt;</button>
</div>

<script>
  const carousel = document.getElementById('carousel');
  const prevBtn = document.getElementById('prevBtn');
  const nextBtn = document.getElementById('nextBtn');
  let currentIndex = 0;
  let intervalId;
  let startX;
  let isSwiping = false;

  function updateCarousel() {
    carousel.style.transform = `translateX(-${currentIndex * 100}%)`;
  }

  function nextSlide() {
    currentIndex = (currentIndex + 1) % 2;
    updateCarousel();
  }

  function prevSlide() {
    currentIndex = (currentIndex - 1 + 2) % 2;
    updateCarousel();
  }

  function startAutoSlide() {
    intervalId = setInterval(nextSlide, 5000);
  }

  function stopAutoSlide() {
    clearInterval(intervalId);
  }

  prevBtn.addEventListener('click', () => {
    prevSlide();
    stopAutoSlide();
    startAutoSlide();
  });

  nextBtn.addEventListener('click', () => {
    nextSlide();
    stopAutoSlide();
    startAutoSlide();
  });

  // Touch events for mobile swiping
  carousel.addEventListener('touchstart', (e) => {
    startX = e.touches[0].clientX;
    isSwiping = true;
    stopAutoSlide();
  }, { passive: true });

  carousel.addEventListener('touchmove', (e) => {
    if (!isSwiping) return;
    const currentX = e.touches[0].clientX;
    const diff = startX - currentX;
    if (Math.abs(diff) > 5) {  // Add a small threshold to prevent accidental swipes
      e.preventDefault();  // Prevent scrolling when swiping
      carousel.style.transform = `translateX(calc(-${currentIndex * 100}% - ${diff}px))`;
    }
  }, { passive: false });

  carousel.addEventListener('touchend', (e) => {
    if (!isSwiping) return;
    const endX = e.changedTouches[0].clientX;
    const diff = startX - endX;
    if (Math.abs(diff) > 50) {
      if (diff > 0) {
        nextSlide();
      } else {
        prevSlide();
      }
    } else {
      updateCarousel();
    }
    isSwiping = false;
    startAutoSlide();
  });

  startAutoSlide();

  // Make buttons more transparent on mobile
  function adjustButtonOpacity() {
    if (window.innerWidth <= 640) {
      prevBtn.classList.add('bg-opacity-30');
      nextBtn.classList.add('bg-opacity-30');
    } else {
      prevBtn.classList.remove('bg-opacity-30');
      nextBtn.classList.remove('bg-opacity-30');
    }
  }

  window.addEventListener('resize', adjustButtonOpacity);
  adjustButtonOpacity();
</script>

